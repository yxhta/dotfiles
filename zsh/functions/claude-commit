# Basic commit message generation
function claude_commit() {
    local diff_output=$(git diff --staged)
    
    if [[ -z "$diff_output" ]]; then
        echo "Error: No staged changes found"
        return 1
    fi
    
    echo "$diff_output" | claude -p "Analyze this git diff and generate a Conventional Commits compliant commit message.

Requirements:
- Format: <type>[optional scope]: <description>
- Select appropriate type: feat, fix, docs, style, refactor, perf, test, build, ci, chore
- Keep description under 50 characters, imperative mood
- Add scope if changes are focused on specific component

Type guidelines:
- feat: new features or functionality
- fix: bug fixes
- docs: documentation changes only
- style: formatting, no code changes
- refactor: code changes that neither fix bugs nor add features
- perf: performance improvements
- test: test-related changes
- build: build system or dependencies
- ci: CI configuration changes
- chore: maintenance tasks

Output format: Just the commit message (e.g., 'feat: add new feature')"
}

# Interactive commit with confirmation
function claude_commit_interactive() {
    local diff_output=$(git diff --staged)
    
    if [[ -z "$diff_output" ]]; then
        echo "Error: No staged changes found"
        return 1
    fi
    
    echo "Analyzing staged changes..."
    local commit_msg=$(echo "$diff_output" | claude -p "Analyze this git diff and generate a Conventional Commits compliant commit message. Output only the commit message, no additional text.")
    
    echo "\nProposed commit message:"
    echo "  $commit_msg"
    echo
    
    read -q "REPLY?Commit with this message? (y/n): "
    echo
    
    if [[ $REPLY == "y" ]]; then
        git commit -m "$commit_msg"
        echo "✅ Commit completed successfully"
    else
        echo "❌ Commit cancelled"
    fi
}

# Commit with custom prompt addition
function claude_commit_custom() {
    local diff_output=$(git diff --staged)
    local custom_prompt="${1:-}"
    
    if [[ -z "$diff_output" ]]; then
        echo "Error: No staged changes found"
        return 1
    fi
    
    local base_prompt="Analyze this git diff and generate a Conventional Commits compliant commit message."
    
    if [[ -n "$custom_prompt" ]]; then
        base_prompt="$base_prompt Additional context: $custom_prompt"
    fi
    
    echo "$diff_output" | claude -p "$base_prompt Output only the commit message."
}

# Aliases
alias ccm='claude_commit'
alias ccmi='claude_commit_interactive'
alias ccmc='claude_commit_custom'
